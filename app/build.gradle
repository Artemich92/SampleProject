plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'
    id 'ru.mobileup.code-quality-android'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.sampleproject"
        minSdk 23
        targetSdk 31
        versionCode 1
        versionName "1.0"

        vectorDrawables {
            useSupportLibrary = true
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures{
        dataBinding = true
        viewBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //Kotlin
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.0'

    //Support
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.arch.core:core-runtime:2.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.activity:activity-ktx:1.4.0'
    implementation 'androidx.fragment:fragment-ktx:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.0-alpha02'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'

    //Lifecycle
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'

    //Retrofit
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'

    //Hilt
    implementation 'com.google.dagger:hilt-android:2.38.1'
    kapt 'com.google.dagger:hilt-android-compiler:2.38.1'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    //Room
    implementation 'androidx.room:room-runtime:2.4.2'
    kapt 'androidx.room:room-compiler:2.4.2'
    implementation 'androidx.room:room-ktx:2.4.2'

    //Paging 3
    implementation 'androidx.paging:paging-runtime-ktx:3.1.1'

    //Navigation
    implementation 'androidx.navigation:navigation-runtime-ktx:2.4.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.2'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.2'

    //Logger
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:29.0.3')
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    // Decoro
    implementation "ru.tinkoff.decoro:decoro:1.5.0"

    // Security
    implementation 'androidx.security:security-crypto-ktx:1.1.0-alpha03'
}

kapt {
    correctErrorTypes = true
}

codeQuality {
    reportsDirectory = file('build/reports')
    issuesFile = rootProject.file('gl-code-quality-report.json')
    collectInformationIssues = true
}

task installPreCommitHook() {
    doFirst {
        def file = new File(rootProject.rootDir, "pre-commit")
        def downloadUrl = "https://ci.getmobileup.com/ci/android/githooks/windows/pre-commit.sh"
        new URL(downloadUrl).withInputStream { i ->
            file.withOutputStream { it << i }
        }
    }
    doLast {
        copy {
            from new File(rootProject.rootDir, "pre-commit")
            into { new File(rootProject.rootDir, ".git/hooks") }
            fileMode 0777
        }
        delete {
            delete "${rootProject.rootDir.path}/pre-commit"
        }
    }
}
